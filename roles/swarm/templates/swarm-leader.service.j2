[Unit]
Description=docker swarm (leader)
After=docker.service
After=consul.service
PartOf=docker.service
Requires=consul.service

[Service]
Restart=always
RestartSec=20
TimeoutStartSec=20m

ExecStartPre=-/usr/bin/docker rm -f swarm-leader
ExecStartPre=-/usr/bin/docker pull {{ swarm_image }}
ExecStart=/usr/bin/docker run \
    --rm \
    --name=swarm-leader \
    --volume=/etc/pki/CA/ca.cert:/etc/pki/CA/ca.cert:ro \
    --volume={{ host_cert }}:{{ host_cert }}:ro \
    --volume={{ host_key }}:{{ host_key }}:ro \
    {% if swarm_tcp_tls -%}
    --volume=/etc/pki/CA/ca.cert:/etc/pki/CA/ca.cert:ro \
    --volume={{ host_cert }}:{{ host_cert }}:ro \
    --volume={{ host_key }}:{{ host_key }}:ro \
    {% endif -%}
    --publish={{ swarm_manager_port }}:{{ swarm_manager_port }}\
    {{ swarm_image }} manage \
    --advertise "{{ private_ipv4 }}:{{ swarm_manager_port }}" \
    {% if swarm_tcp_tls -%}
    --tlsverify \
    --tlscacert=/etc/pki/CA/ca.cert \
    --tlscert={{ host_cert }} \
    --tlskey={{ host_key }} \
    {% endif -%}
    {% if do_consul_ssl -%}
    --discovery-opt "kv.cacertfile=/etc/pki/CA/ca.cert" \
    --discovery-opt "kv.certfile={{ host_cert }}" \
    --discovery-opt "kv.keyfile={{ host_key }}" \
    {% endif -%}
    --replication \
    -H ":{{ swarm_manager_port }}" \
    consul://consul.service.consul:8500/nodes

ExecStop=/bin/bash -c " \
    /usr/bin/docker kill swarm-leader && \
    /usr/bin/docker rm -f swarm-leader"

[Install]
WantedBy=multi-user.target
